<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.github.ylfjm.mapper.AdminMapper">

    <resultMap id="AdminWithRole" type="com.github.ylfjm.pojo.po.Admin">
        <result column="admin_id" property="id" jdbcType="INTEGER"/>
        <collection property="roleIds" ofType="com.github.ylfjm.pojo.po.AdminRole" select="selectRoleIdByAdminId" column="admin_id">
            <result column="admin_id" property="adminId" jdbcType="INTEGER"/>
        </collection>
        <collection property="roleNameList" ofType="com.github.ylfjm.pojo.po.AdminRole" select="selectRoleNameByAdminId" column="admin_id">
            <result column="admin_id" property="adminId" jdbcType="INTEGER"/>
        </collection>
    </resultMap>

    <!--获取管理员列表，携带角色信息-->
    <select id="selectWithRole" resultMap="AdminWithRole">
        select distinct
        a.id as admin_id,
        a.user_name,
        a.password,
        a.real_name,
        a.dept_id,
        d.`name` as deptName,
        a.post_code,
        a.remark,
        a.forbidden,
        a.creator,
        a.create_time,
        a.updater,
        a.update_time
        from admin a
        left join department d on d.id = a.dept_id
        <if test="roleId != null">
            inner join admin__role ar on a.id = ar.admin_id and ar.role_id = #{roleId}
        </if>
        where 1=1
        <if test="deptId != null">
            and a.dept_id = #{deptId}
        </if>
        <if test="postCode != null and postCode != ''">
            and a.post_code = #{postCode}
        </if>
        <if test="realName != null and realName != ''">
            and a.real_name like CONCAT('%', #{realName}, '%')
        </if>
        <if test="forbidden != null">
            and a.forbidden = #{forbidden}
        </if>
        order by a.id
    </select>

    <select id="selectRoleIdByAdminId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select distinct role_id from admin__role where admin_id = #{admin_id}
    </select>
    <select id="selectRoleNameByAdminId" parameterType="java.lang.Integer" resultType="java.lang.String">
        select distinct r.name from admin__role ar inner join role r on ar.role_id = r.id where ar.admin_id = #{admin_id} order by r.id
    </select>

</mapper>